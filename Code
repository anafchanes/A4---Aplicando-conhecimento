#include <WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>
#include <Wire.h>
#include <BH1750.h>

// Configuração Wi-Fi
const char* ssid = "SEU_SSID";
const char* password = "SUA_SENHA";

// Configuração MQTT
const char* mqtt_server = "test.mosquitto.org"; // Pode ser ajustado para outro broker
WiFiClient espClient;
PubSubClient client(espClient);

// Configuração dos sensores
#define DHTPIN 4 // GPIO conectado ao DHT22
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);
BH1750 lightSensor;

// Configuração do relé
#define RELAY_PIN 13 // GPIO para controle do relé
bool relayState = false; // Estado inicial do relé

// Variáveis auxiliares
unsigned long lastMsg = 0;
#define INTERVALO 5000 // Intervalo de envio de dados (5 segundos)

void setup() {
  Serial.begin(115200);
  dht.begin();
  Wire.begin();
  lightSensor.begin();
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, LOW);

  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void setup_wifi() {
  delay(10);
  Serial.println("\nConectando-se ao Wi-Fi...");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConectado ao Wi-Fi!");
}

void callback(char* topic, byte* payload, unsigned int length) {
  String message;
  for (int i = 0; i < length; i++) {
    message += (char)payload[i];
  }

  // Controle do relé via MQTT
  if (String(topic) == "casa/sala/controle") {
    if (message == "ON") {
      digitalWrite(RELAY_PIN, HIGH);
      relayState = true;
      Serial.println("Relé ligado via MQTT");
    } else if (message == "OFF") {
      digitalWrite(RELAY_PIN, LOW);
      relayState = false;
      Serial.println("Relé desligado via MQTT");
    }
  }
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Tentando conexão MQTT...");
    if (client.connect("ESP32Client")) {
      Serial.println("Conectado ao broker MQTT!");
      client.subscribe("casa/sala/controle");
    } else {
      Serial.print("Falha na conexão. Código:");
      Serial.print(client.state());
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  unsigned long now = millis();
  if (now - lastMsg > INTERVALO) {
    lastMsg = now;

    // Leitura do DHT22
    float temp = dht.readTemperature();
    float humidity = dht.readHumidity();

    // Leitura do BH1750
    float lux = lightSensor.readLightLevel();

    // Publicar dados no MQTT
    if (!isnan(temp) && !isnan(humidity)) {
      client.publish("casa/sala/temperatura", String(temp).c_str());
      client.publish("casa/sala/umidade", String(humidity).c_str());
    }

    if (!isnan(lux)) {
      client.publish("casa/sala/luminosidade", String(lux).c_str());
    }

    // Controle automático do relé
    if (temp > 30.0 || lux < 200) {
      digitalWrite(RELAY_PIN, HIGH);
      relayState = true;
    } else {
      digitalWrite(RELAY_PIN, LOW);
      relayState = false;
    }
  }
}
